{{- if eq .Values.global.cloudProvider "aws" }}
# Main S3 Bucket
apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-2'
spec:
  forProvider:
    tags:
      created-by: "entigo-infralib"
    region: {{ .Values.global.aws.region }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
---
# ACL Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketACL
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }},private
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    acl: private
    region: {{ .Values.global.aws.region }}
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
---
# Object Ownership Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketOwnershipControls
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    region: {{ .Values.global.aws.region }}
    rule:
      - objectOwnership: BucketOwnerPreferred
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
---
# Public Access Block Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketPublicAccessBlock
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    region: {{ .Values.global.aws.region }}
    blockPublicPolicy: true
    blockPublicAcls: true
    ignorePublicAcls: true
    restrictPublicBuckets: true
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
---
# Transfer Acceleration Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketAccelerateConfiguration
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    region: {{ .Values.global.aws.region }}
    status: Enabled
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
---
# Versioning Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketVersioning
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    region: {{ .Values.global.aws.region }}
    versioningConfiguration:
      - status: Suspended
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
---
# Server Side Encryption Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketServerSideEncryptionConfiguration
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    region: {{ .Values.global.aws.region }}
    rule:
      - applyServerSideEncryptionByDefault:
          {{- if .Values.global.aws.kmsKeyId }}
          - kmsMasterKeyId: {{ .Values.global.aws.kmsKeyId }}
            sseAlgorithm: aws:kms
          {{- else }}
          - sseAlgorithm: AES256
          {{- end }}
        bucketKeyEnabled: true
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
{{- if .Values.global.aws.bucketLifecycleRules }}
---
# Lifecycle Configuration
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketLifecycleConfiguration
metadata:
  name: {{ .Values.global.bucketName }}
  annotations:
    crossplane.io/external-name: {{ .Values.global.bucketName }}
    argocd.argoproj.io/sync-wave: '-1'
spec:
  forProvider:
    region: {{ .Values.global.aws.region }}
    rule:
      {{- toYaml .Values.global.aws.bucketLifecycleRules | nindent 6 }}
    bucketRef:
      name: {{ .Values.global.bucketName }}
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
{{- end }}
{{- end }}
